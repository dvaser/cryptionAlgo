# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'cryption.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import matplotlib.pyplot as plt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from PyQt5.QtWidgets import QApplication, QGraphicsScene, QGraphicsView, QGraphicsItem, QMainWindow, QListView
from PyQt5.QtCore import QStringListModel
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure
import numpy as np
import string
from random import randint
from Crypto.Cipher import DES
from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
import binascii
import time


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(890, 480)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(890, 480))
        MainWindow.setMaximumSize(QtCore.QSize(890, 480))
        font = QtGui.QFont()
        font.setKerning(True)
        MainWindow.setFont(font)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setAnimated(True)
        MainWindow.setDocumentMode(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMaximumSize(QtCore.QSize(890, 480))
        self.centralwidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout.setObjectName("gridLayout")
        self.listView = QtWidgets.QListView(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.listView.sizePolicy().hasHeightForWidth())
        self.listView.setSizePolicy(sizePolicy)
        self.listView.setMaximumSize(QtCore.QSize(16777215, 50))
        self.listView.setObjectName("listView")
        self.gridLayout.addWidget(self.listView, 2, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 8, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem, 7, 0, 1, 1)
        self.label_decryption = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.label_decryption.setFont(font)
        self.label_decryption.setAlignment(QtCore.Qt.AlignCenter)
        self.label_decryption.setObjectName("label_decryption")
        self.gridLayout.addWidget(self.label_decryption, 4, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem1, 5, 0, 1, 1)
        self.horizontalLayout_input = QtWidgets.QHBoxLayout()
        self.horizontalLayout_input.setObjectName("horizontalLayout_input")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_input.addItem(spacerItem2)
        self.label_input = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Montserrat")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_input.setFont(font)
        self.label_input.setObjectName("label_input")
        self.horizontalLayout_input.addWidget(self.label_input)
        spacerItem3 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_input.addItem(spacerItem3)
        self.lineEdit_input = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Montserrat Medium")
        font.setPointSize(9)
        font.setItalic(True)
        self.lineEdit_input.setFont(font)
        self.lineEdit_input.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_input.setText("")
        self.lineEdit_input.setFrame(True)
        self.lineEdit_input.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_input.setCursorMoveStyle(QtCore.Qt.VisualMoveStyle)
        self.lineEdit_input.setObjectName("lineEdit_input")
        self.horizontalLayout_input.addWidget(self.lineEdit_input)
        spacerItem4 = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_input.addItem(spacerItem4)
        self.pushButton_ok = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_ok.sizePolicy().hasHeightForWidth())
        self.pushButton_ok.setSizePolicy(sizePolicy)
        self.pushButton_ok.setMaximumSize(QtCore.QSize(30, 50))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_ok.setFont(font)
        self.pushButton_ok.setAcceptDrops(False)
        self.pushButton_ok.setAutoDefault(False)
        self.pushButton_ok.setDefault(True)
        self.pushButton_ok.setFlat(False)
        self.pushButton_ok.setObjectName("pushButton_ok")
        self.horizontalLayout_input.addWidget(self.pushButton_ok)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_input.addItem(spacerItem5)
        self.gridLayout.addLayout(self.horizontalLayout_input, 1, 0, 1, 1)
        self.horizontalLayout_pushButton = QtWidgets.QHBoxLayout()
        self.horizontalLayout_pushButton.setObjectName("horizontalLayout_pushButton")
        self.gridLayout.addLayout(self.horizontalLayout_pushButton, 21, 0, 1, 1)
        self.verticalLayout_graph = QtWidgets.QVBoxLayout()
        self.verticalLayout_graph.setObjectName("verticalLayout_graph")
        self.horizontalLayout_algorithmName = QtWidgets.QHBoxLayout()
        self.horizontalLayout_algorithmName.setObjectName("horizontalLayout_algorithmName")
        spacerItem6 = QtWidgets.QSpacerItem(50, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_algorithmName.addItem(spacerItem6)
        self.label_algo1 = QtWidgets.QLabel(self.centralwidget)
        self.label_algo1.setObjectName("label_algo1")
        self.horizontalLayout_algorithmName.addWidget(self.label_algo1)
        spacerItem7 = QtWidgets.QSpacerItem(50, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_algorithmName.addItem(spacerItem7)
        self.label_algo2 = QtWidgets.QLabel(self.centralwidget)
        self.label_algo2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_algo2.setObjectName("label_algo2")
        self.horizontalLayout_algorithmName.addWidget(self.label_algo2)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_algorithmName.addItem(spacerItem8)
        self.label_algo3 = QtWidgets.QLabel(self.centralwidget)
        self.label_algo3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_algo3.setObjectName("label_algo3")
        self.horizontalLayout_algorithmName.addWidget(self.label_algo3)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_algorithmName.addItem(spacerItem9)
        self.verticalLayout_graph.addLayout(self.horizontalLayout_algorithmName)
        self.horizontalLayout_graph = QtWidgets.QHBoxLayout()
        self.horizontalLayout_graph.setObjectName("horizontalLayout_graph")
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_graph.addItem(spacerItem10)
        self.graphicsView_algo1 = QtWidgets.QGraphicsView(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graphicsView_algo1.sizePolicy().hasHeightForWidth())
        self.graphicsView_algo1.setSizePolicy(sizePolicy)
        self.graphicsView_algo1.setObjectName("graphicsView_algo1")
        self.horizontalLayout_graph.addWidget(self.graphicsView_algo1)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_graph.addItem(spacerItem11)
        self.graphicsView_algo2 = QtWidgets.QGraphicsView(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graphicsView_algo2.sizePolicy().hasHeightForWidth())
        self.graphicsView_algo2.setSizePolicy(sizePolicy)
        self.graphicsView_algo2.setObjectName("graphicsView_algo2")
        self.horizontalLayout_graph.addWidget(self.graphicsView_algo2)
        spacerItem12 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_graph.addItem(spacerItem12)
        self.graphicsView_algo3 = QtWidgets.QGraphicsView(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graphicsView_algo3.sizePolicy().hasHeightForWidth())
        self.graphicsView_algo3.setSizePolicy(sizePolicy)
        self.graphicsView_algo3.setObjectName("graphicsView_algo3")
        self.horizontalLayout_graph.addWidget(self.graphicsView_algo3)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_graph.addItem(spacerItem13)
        self.verticalLayout_graph.addLayout(self.horizontalLayout_graph)
        self.gridLayout.addLayout(self.verticalLayout_graph, 11, 0, 1, 1)
        self.horizontalLayout_decryption = QtWidgets.QHBoxLayout()
        self.horizontalLayout_decryption.setObjectName("horizontalLayout_decryption")
        spacerItem14 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_decryption.addItem(spacerItem14)
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_2.sizePolicy().hasHeightForWidth())
        self.textBrowser_2.setSizePolicy(sizePolicy)
        self.textBrowser_2.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.horizontalLayout_decryption.addWidget(self.textBrowser_2)
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_decryption.addItem(spacerItem15)
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser.sizePolicy().hasHeightForWidth())
        self.textBrowser.setSizePolicy(sizePolicy)
        self.textBrowser.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser.setObjectName("textBrowser")
        self.horizontalLayout_decryption.addWidget(self.textBrowser)
        spacerItem16 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_decryption.addItem(spacerItem16)
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_3.sizePolicy().hasHeightForWidth())
        self.textBrowser_3.setSizePolicy(sizePolicy)
        self.textBrowser_3.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.horizontalLayout_decryption.addWidget(self.textBrowser_3)
        spacerItem17 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_decryption.addItem(spacerItem17)
        self.gridLayout.addLayout(self.horizontalLayout_decryption, 6, 0, 1, 1)
        spacerItem18 = QtWidgets.QSpacerItem(20, 15, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem18, 3, 0, 1, 1)
        spacerItem19 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem19, 9, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)

        self.pushButton_ok.clicked.connect(self.okButton)
        
        self.time_algo1 = []
        self.time_algo2 = []
        self.time_algo3 = []

        self.listText = []

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "CRYPTION"))
        self.label.setText(_translate("MainWindow", "GRAPH"))
        self.label_decryption.setText(_translate("MainWindow", "DECRYPTION"))
        self.label_input.setText(_translate("MainWindow", "INPUT"))
        self.pushButton_ok.setText(_translate("MainWindow", "OK"))
        self.label_algo1.setText(_translate("MainWindow", "ENCRYPTION"))
        self.label_algo2.setText(_translate("MainWindow", "DES ALGORITHM"))
        self.label_algo3.setText(_translate("MainWindow", "RSA ALGORITHM"))

    def okButton(self):
        text = self.lineEdit_input.text()
        self.listText.append(text)

        model = QStringListModel(self.listText)
        self.listView.setModel(model)

        start_time_algo1 = time.time()
        algo1_result = self.algo1(text=text)
        end_time_algo1 = time.time()        
        timer = start_time_algo1-end_time_algo1
        self.time_algo1.append(timer)

        start_time_algo2 = time.time()
        algo2_result = self.algo2(text=text)
        end_time_algo2 = time.time()
        timer = start_time_algo2-end_time_algo2
        self.time_algo2.append(timer)

        start_time_algo3 = time.time()
        algo3_result = self.algo3(text=text)
        end_time_algo3 = time.time()
        timer = start_time_algo3-end_time_algo3
        self.time_algo3.append(timer)

        self.textBrowser.clear()
        self.textBrowser.append(f"{algo2_result}")
        self.textBrowser_2.clear()
        self.textBrowser_2.append(f"{algo1_result}")
        self.textBrowser_3.clear()
        self.textBrowser_3.append(f"{algo3_result}")

        colorPallete = ["red", "green", "blue", "purple", "orange"]

        # 1.ALGO
        self.figure_algo1, ax = plt.subplots(figsize=(3, 3))
        plt.plot([i+1 for i in range(len(self.time_algo1))], self.time_algo1, label="Zaman", color=colorPallete[0])

        self.canvas_algo1 = FigureCanvas(self.figure_algo1)
        self.scene_algo1 = QGraphicsScene()
        self.scene_algo1.addWidget(self.canvas_algo1)
        self.graphicsView_algo1.setScene(self.scene_algo1)

        # 2.ALGO
        self.figure_algo2, ax = plt.subplots(figsize=(3, 3))
        plt.plot([i+1 for i in range(len(self.time_algo2))], self.time_algo2, label="Zaman", color=colorPallete[1])

        self.canvas_algo2 = FigureCanvas(self.figure_algo2)
        self.scene_algo2 = QGraphicsScene()
        self.scene_algo2.addWidget(self.canvas_algo2)
        self.graphicsView_algo2.setScene(self.scene_algo2)

        # 3.ALGO
        self.figure_algo3, ax = plt.subplots(figsize=(3, 3))
        plt.plot([i+1 for i in range(len(self.time_algo3))], self.time_algo3, label="Zaman", color=colorPallete[2])

        self.canvas_algo3 = FigureCanvas(self.figure_algo3)
        self.scene_algo3 = QGraphicsScene()
        self.scene_algo3.addWidget(self.canvas_algo3)
        self.graphicsView_algo3.setScene(self.scene_algo3)

    def algo1(self, text):
        class Encryption:
            def __init__(self, text):
                self.CHARS = string.ascii_uppercase
                self.INPUT = text.upper()
                self.RANDOM = self.randomValue()
                self.HASH = self.createHash()
                self.CRYPTION = self.readHash()

            def randomValue(self, r=0):
                while len(self.INPUT) <= r or r == 0:
                    r = randint(3,6)
                return r

            def createHash(self):
                hash = []
                for i, char in enumerate(self.INPUT):
                    for iC, C in enumerate(self.CHARS):
                        if char == C:						# input karakteri == alfabedeki karakter
                            m = i % self.RANDOM				# m = input karakter index'i   % (modu)   random deger (3-6)
                            s = i // self.RANDOM			# s = input karakter index'i   // (tam bolme)   random deger (3-6)
                            c = self.CHARS[(iC+(m-self.RANDOM)+(s*self.RANDOM))%len(self.CHARS)]
                            hash.append(f"{c}{m}{s}")
                return hash

            def readHash(self):
                cryption = ''
                for p in self.HASH:
                    cryption += p
                    cryption += " "
                return cryption

            def returner(self):
                return self.CRYPTION
        return Encryption(text=text).returner()

    def algo2(self, text):
        def pad(text):
            """Metni 8'in katları şeklinde dolgu yapar."""
            while len(text) % 8 != 0:
                text += b' '
            return text

        def des_encrypt(key, plaintext):
            """DES algoritması kullanarak verilen anahtar ve metni şifreler."""
            cipher = DES.new(key, DES.MODE_CBC)
            padded_plaintext = pad(plaintext)
            ciphertext = cipher.encrypt(padded_plaintext)
            return ciphertext

        # Kullanıcıdan anahtar ve metin girişi alınması:
        key = b'12345678'
        plaintext = text.encode() # UTF-8 formatında byte'a çeviriyoruz

        # Şifreleme işlemi:
        ciphertext = des_encrypt(key, plaintext)
        return ciphertext

    def algo3(self, text):
        # Anahtar çiftini oluştur
        keyPair = RSA.generate(1024)

        # Açık anahtar ve özel anahtar oluştur
        pubKey = keyPair.publickey()
        privKey = keyPair.exportKey()

        # Mesajı şifreleme işlemi
        def encrypt_message(message):
            encryptor = PKCS1_OAEP.new(pubKey)
            encrypted = encryptor.encrypt(message)
            return encrypted

        # Şifrelenmiş mesajı çözme işlemi
        def decrypt_message(encrypted_message):
            decryptor = PKCS1_OAEP.new(keyPair)
            decrypted = decryptor.decrypt(encrypted_message)
            return decrypted

        # Şifrelenecek mesajı kullanıcıdan al
        message = text.encode()

        # Mesajı şifrele ve şifrelenmiş mesajı yazdır
        encrypted_message = encrypt_message(message)
        return binascii.hexlify(encrypted_message)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
